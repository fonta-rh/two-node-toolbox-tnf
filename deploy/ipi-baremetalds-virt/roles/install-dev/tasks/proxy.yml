- name: get kubeconfig
  fetch:
    src: "{{kubeconfig_path}}"
    dest: ./kubeconfig
    flat: true
- name: create proxy environment
  copy:
    content: |
      export EC2_PUBLIC_IP={{ hostvars[inventory_hostname]['inventory_hostname'].split('@')[1] }}
      export PROXYPORT=8213
      export HTTP_PROXY=http://${EC2_PUBLIC_IP}:${PROXYPORT}/
      export HTTPS_PROXY=http://${EC2_PUBLIC_IP}:${PROXYPORT}/
      export NO_PROXY="static.redhat.com,redhat.io,quay.io,openshift.org,openshift.com,svc,amazonaws.com,r2.cloudflarestorage.com,github.com,githubusercontent.com,google.com,googleapis.com,fedoraproject.org,cloudfront.net,localhost,127.0.0.1"

      export http_proxy=http://${EC2_PUBLIC_IP}:${PROXYPORT}/
      export https_proxy=http://${EC2_PUBLIC_IP}:${PROXYPORT}/
      export no_proxy="static.redhat.com,redhat.io,quay.io,openshift.org,openshift.com,svc,amazonaws.com,r2.cloudflarestorage.com,github.com,githubusercontent.com,google.com,googleapis.com,fedoraproject.org,cloudfront.net,localhost,127.0.0.1"
      export KUBECONFIG=./kubeconfig
    dest: "./proxy.env"
  delegate_to: localhost
- name: Install firewalld
  dnf:
    name: firewalld
    state: present
  become: yes
- name: Install podman
  dnf:
    name: podman
    state: present
  become: yes
- name: Copy pull squid config
  copy:
    dest: "~/squid.conf"
    src: squid.conf
- name: start firewalld
  shell: |
    sudo systemctl start firewalld
- name: add proxy port to firewall
  shell: |
    sudo firewall-cmd --add-port=8213/tcp --permanent
- name: reload firewall-cmd
  shell: |
    sudo firewall-cmd --reload

- name: Create a proxy container
  containers.podman.podman_container:
    name: external-squid
    image: quay.io/openshifttest/squid-proxy:multiarch
    state: started
    dns: "127.0.0.1"
    restart_policy: always
    net: host
    volumes:
      - "/home/ec2-user/squid.conf:/etc/squid/squid.conf"
